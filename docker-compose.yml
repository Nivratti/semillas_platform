version: '2'

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}
  wwwroot:
    driver: local

services:
  postgres:
    build: ./compose/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups
    environment:
      - POSTGRES_USER=semillas_backend

  django:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    command: python /app/manage.py runserver 0.0.0.0:8000
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=semillas_backend
      - USE_DOCKER=yes
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    links:
      - postgres
      - mailhog
    stdin_open: true
    tty: true

  worker:
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    command: python /app/manage.py runworker --settings config.settings.chat_local
    volumes:
      - .:/app
    depends_on:
      - django
      - redis
    environment:
      - POSTGRES_USER=semillas_backend
      - USE_DOCKER=yes
    links:
      - postgres
      - mailhog
    stdin_open: true
    tty: true

  daphne:
    build:
      context: .
      dockerfile: ./compose/daphne/Dockerfile-dev
    command: daphne chat.asgi_local:channel_layer --port 8888 --bind 0.0.0.0
    volumes:
      - .:/app
    depends_on:
      - django
    environment:
      - POSTGRES_USER=semillas_backend
      - USE_DOCKER=yes
    links:
      - postgres
      - mailhog
    ports:
      - "8888:8888"
    stdin_open: true
    tty: true


  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"

  redis:
    image: "redis:alpine"
    ports:
      - "6379:6379"
